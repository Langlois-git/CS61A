from math import sqrt

x = 15

def square(x):
    return print(x * x)

def multiply(x):
    x_new = x * 2
    return x * 3


>>> print(print(3, 5))
3 5
None

>>> square(x)
225

>>> True and 17
17

>>> print(multiply(x))
45

>>> multiply(multiply(3))
27

>>> print(square(multiply(2)), 8) + 3
>>> print(print(6*6), 8) + 3
36
None 8
Error

------------------------------------------------------------------------
x = 2

def take_quiz(x):
    print(x * 10)
    if x * 10 >= 100:
        return 'Good job!'
    return 'Go to office hours!'

def office_hour(x):
    while x < 10:
        x = x + 3
    return print(take_quiz(x)) <-- the print function returns None, but if you return a none value, nothing is displayed


>>> pow(print(0, 0), 0)
0 0
>>> pow(None, 0)
error

>>> office_hour(4)
100
Good job!

>>> print(take_quiz(x))
20
Go to office hours!


>>> print(office_hour(x))
110
Good job!
None

>>> office_hour(office_hour(x))
110
Good Job
Error

>>> take_quiz(-3) and print(office_hour(x))
-30
110
Good Job!
None

'Go to office hours' and 'Good job!' <-- both true

--------------------------------------------------------------------------

def wan1(wan1, wan11):
    return wan1 == wan11

def wan11(wan11, wan1):
    return wan1 / wan11

one, wan, won = 1, 3, 17

def derek(wan, won, one):
    print(wan1(wan, wan11(won, 1)))
    return wan11(one, wan1)

>>> print(one or wan11(0, one))
>>> print(1 or wan11(0, 1))
>>> print(1 or error)
>>> print(1)
1

>>> print(wan1(one, wan11(one, one)))
>>> print(wan1(1, wan11(1, 1)))
>>> print(wan1(1, 1))
>>> print(True)
True

>>> print(print(wan - won), wan1)
>>> print(print(3 - 17), wan1)
>>> print(print(-14), wan1)
-14
>>> print(None, wan1)
None Function

>>> derek(1, 1, 2)
>>> print(wan1(1, wan11(1, 1)))
    return wan11(one, wan1)
>>> print(wan1(1, 1))
    return wan11(one, wan1)
>>> print(True)
True
>>> return wan11(2, Function)
>>> return Function / 2
Error

>>> derek(wan, 2, one)
>>> print(wan1(3, wan11(2, 1)))
    return wan11(1, wan1)
>>> print(wan1(3, 0.5))
    return wan11(1, wan1)
>>> print(False)
False
>>> return wan11(1, wan1)
Error
-------------------------------------------------------------------------

s = 2

def hat(s):
    while s > 0:
        whoos(s)
        s = s - 1
    return whoos(s)

def someones(their, hat):
    his, her = their, hat
    hat = print(his or her) and her or his
    if hat:
        return 'hat'

def whoos(hat):
    return print(hat)

>>> print(s) or 1 / 0
2
>>> None or 1 / 0
Error

>>> 0 or 2 == True and print(5)
>>> 0 or 2 == True and print(5)
>>> 2 == True and print(5)
>>> False and print(5)
False

>>> her, cat = 'her', print('theirs') or 'his' <-- cat is bound to 'his'
thiers

>>> her, cat = 'her', 'his'
def someones(their, hat):
    his, her = their, hat
    hat = print(his or her) and her or his
    if hat:
        return 'hat'

>>> someones('her', 'his')
>>> his, her = 'her', 'his'
>>> hat = print('her' or 'his') and 'his' or 'her'
her
>>> hat = None and 'his' or 'her'
>>> hat = None or 'her'
>>> hat = 'her' <-- this makes hat True in a boolean context
>>>  if hat:
        return 'hat'
'hat'

>>> s = 2
>>> hat(2)
    while 0 > 0:
        whoos(1)
        s = s - 1
    return whoos(s)
def whoos(0):
    return print(0)

2
1
0

>>> print(whoos(hat), someones(cat, hat))
s = 2

def hat(s):
    while s > 0:
        whoos(s)
        s = s - 1
    return whoos(s)

def someones(their, hat):
    his, her = their, hat
    hat = print(his or her) and her or his
    if hat:
        return 'hat'

def whoos(hat):
    return print(hat)

>>> print(whoos(hat), someones(cat, hat))
>>> print()

1	s = 2
2	
3	def hat(s):
4	    while s > 0:
5	        whoos(s)
6	        s = s - 1
7	    return whoos(s)
8	
9	def someones(their, hat):
10	    his, her = their, hat
11	    hat = print(his or her) and her or his
12	    if hat:
13	        return 'hat'
14	
15	def whoos(hat):
16	    return print(hat)
17	
18	her, cat = 'her', print('theirs') or 'his'
19	    
20	print(whoos(hat), someones(cat, hat))

theirs
<function hat at 0x7f768da9fe18>
his
None hat


